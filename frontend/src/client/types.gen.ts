// This file is auto-generated by @hey-api/openapi-ts

export type BodyAuthLoginAccessToken = {
    grant_type?: string | null;
    username: string;
    password: string;
    scope?: string;
    client_id?: string | null;
    client_secret?: string | null;
};

export type HttpValidationError = {
    detail?: Array<ValidationError>;
};

/**
 * UserCreate model for creating a user.
 */
export type PrivateUserCreate = {
    username: string;
    email?: string | null;
    full_name?: string | null;
    disabled?: boolean | null;
    is_superuser?: boolean | null;
    password: string;
};

export type Token = {
    access_token: string;
    token_type?: string;
};

export type UserPublic = {
    username: string;
    email?: string | null;
    full_name?: string | null;
    disabled?: boolean | null;
    is_superuser?: boolean | null;
};

export type ValidationError = {
    loc: Array<string | number>;
    msg: string;
    type: string;
};

export type AuthLoginAccessTokenData = {
    body: BodyAuthLoginAccessToken;
    path?: never;
    query?: never;
    url: '/api/v1/login/access-token';
};

export type AuthLoginAccessTokenErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type AuthLoginAccessTokenError = AuthLoginAccessTokenErrors[keyof AuthLoginAccessTokenErrors];

export type AuthLoginAccessTokenResponses = {
    /**
     * Successful Response
     */
    200: Token;
};

export type AuthLoginAccessTokenResponse = AuthLoginAccessTokenResponses[keyof AuthLoginAccessTokenResponses];

export type UsersGetOwnUserData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/v1/user/me';
};

export type UsersGetOwnUserResponses = {
    /**
     * Successful Response
     */
    200: UserPublic;
};

export type UsersGetOwnUserResponse = UsersGetOwnUserResponses[keyof UsersGetOwnUserResponses];

export type UsersTestAuthData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/v1/test';
};

export type UsersTestAuthResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type PrivateCreateUserData = {
    body: PrivateUserCreate;
    path?: never;
    query?: never;
    url: '/api/v1/private/users/';
};

export type PrivateCreateUserErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type PrivateCreateUserError = PrivateCreateUserErrors[keyof PrivateCreateUserErrors];

export type PrivateCreateUserResponses = {
    /**
     * Successful Response
     */
    200: UserPublic;
};

export type PrivateCreateUserResponse = PrivateCreateUserResponses[keyof PrivateCreateUserResponses];

export type ClientOptions = {
    baseUrl: `${string}://${string}` | (string & {});
};