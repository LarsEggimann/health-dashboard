// This file is auto-generated by @hey-api/openapi-ts

export type BodyAuthLoginAccessToken = {
  grant_type?: string | null
  username: string
  password: string
  scope?: string
  client_id?: string | null
  client_secret?: string | null
}

export type HttpValidationError = {
  detail?: Array<ValidationError>
}

export type MonitoringHeartRates = {
  heart_rate: Array<number>
  timestamp: Array<string>
}

/**
 * UserCreate model for creating a user.
 */
export type PrivateUserCreate = {
  username: string
  email?: string | null
  first_name?: string | null
  last_name?: string | null
  disabled?: boolean | null
  is_superuser?: boolean | null
  password: string
}

export type Token = {
  access_token: string
  token_type?: string
}

export type UpdateProcessStatus = {
  status: 'running' | 'finished'
}

export type UserPublic = {
  username: string
  email?: string | null
  first_name?: string | null
  last_name?: string | null
  disabled?: boolean | null
  is_superuser?: boolean | null
}

export type ValidationError = {
  loc: Array<string | number>
  msg: string
  type: string
}

export type HealthDataManagementUpdateHealthDataData = {
  body?: never
  path?: never
  query?: never
  url: '/api/v1/health-data-management/update'
}

export type HealthDataManagementUpdateHealthDataResponses = {
  /**
   * Successful Response
   */
  200: UpdateProcessStatus
}

export type HealthDataManagementUpdateHealthDataResponse =
  HealthDataManagementUpdateHealthDataResponses[keyof HealthDataManagementUpdateHealthDataResponses]

export type HealthDataManagementGetStatusOnUpdateHealthDataData = {
  body?: never
  path?: never
  query?: never
  url: '/api/v1/health-data-management/update/status'
}

export type HealthDataManagementGetStatusOnUpdateHealthDataResponses = {
  /**
   * Successful Response
   */
  200: UpdateProcessStatus
}

export type HealthDataManagementGetStatusOnUpdateHealthDataResponse =
  HealthDataManagementGetStatusOnUpdateHealthDataResponses[keyof HealthDataManagementGetStatusOnUpdateHealthDataResponses]

export type HealthDataGetMonitoringHeartRateData = {
  body?: never
  path?: never
  query?: {
    start?: string | null
    end?: string | null
  }
  url: '/api/v1/health-data/monitoring/heart-rate'
}

export type HealthDataGetMonitoringHeartRateErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError
}

export type HealthDataGetMonitoringHeartRateError =
  HealthDataGetMonitoringHeartRateErrors[keyof HealthDataGetMonitoringHeartRateErrors]

export type HealthDataGetMonitoringHeartRateResponses = {
  /**
   * Successful Response
   */
  200: MonitoringHeartRates
}

export type HealthDataGetMonitoringHeartRateResponse =
  HealthDataGetMonitoringHeartRateResponses[keyof HealthDataGetMonitoringHeartRateResponses]

export type AuthLoginAccessTokenData = {
  body: BodyAuthLoginAccessToken
  path?: never
  query?: never
  url: '/api/v1/login/access-token'
}

export type AuthLoginAccessTokenErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError
}

export type AuthLoginAccessTokenError =
  AuthLoginAccessTokenErrors[keyof AuthLoginAccessTokenErrors]

export type AuthLoginAccessTokenResponses = {
  /**
   * Successful Response
   */
  200: Token
}

export type AuthLoginAccessTokenResponse =
  AuthLoginAccessTokenResponses[keyof AuthLoginAccessTokenResponses]

export type UsersGetOwnUserData = {
  body?: never
  path?: never
  query?: never
  url: '/api/v1/user/me'
}

export type UsersGetOwnUserResponses = {
  /**
   * Successful Response
   */
  200: UserPublic
}

export type UsersGetOwnUserResponse =
  UsersGetOwnUserResponses[keyof UsersGetOwnUserResponses]

export type PrivateCreateUserData = {
  body: PrivateUserCreate
  path?: never
  query?: never
  url: '/api/v1/private/users'
}

export type PrivateCreateUserErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError
}

export type PrivateCreateUserError =
  PrivateCreateUserErrors[keyof PrivateCreateUserErrors]

export type PrivateCreateUserResponses = {
  /**
   * Successful Response
   */
  200: UserPublic
}

export type PrivateCreateUserResponse =
  PrivateCreateUserResponses[keyof PrivateCreateUserResponses]

export type ClientOptions = {
  baseUrl: `${string}://${string}` | (string & {})
}
