{
  "openapi": "3.1.0",
  "info": { "title": "Health Dashboard API", "version": "0.1.0" },
  "paths": {
    "/api/v1/health-data-management/update": {
      "post": {
        "tags": ["health-data-management"],
        "summary": "Update Health Data",
        "description": "Update health data, starts separete process to update server db for corresponding user",
        "operationId": "health-data-management-update_health_data",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UpdateProcessStatus" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/api/v1/health-data-management/update/status": {
      "get": {
        "tags": ["health-data-management"],
        "summary": "Get Status On Update Health Data",
        "description": "Get status on update health data process",
        "operationId": "health-data-management-get_status_on_update_health_data",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UpdateProcessStatus" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/api/v1/health-data/monitoring/heart-rate": {
      "get": {
        "tags": ["health-data"],
        "summary": "Get Monitoring Heart Rate",
        "description": "Get monitoring heart rate based on optional time frame input.",
        "operationId": "health-data-get_monitoring_heart_rate",
        "security": [{ "OAuth2PasswordBearer": [] }],
        "parameters": [
          {
            "name": "start",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                { "type": "string", "format": "date-time" },
                { "type": "null" }
              ],
              "title": "Start"
            }
          },
          {
            "name": "end",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                { "type": "string", "format": "date-time" },
                { "type": "null" }
              ],
              "title": "End"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MonitoringHeartRates"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/v1/login/access-token": {
      "post": {
        "tags": ["auth"],
        "summary": "Login Access Token",
        "description": "OAuth2 compatible token login, get an access token for requests",
        "operationId": "auth-login_access_token",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_auth-login_access_token"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Token" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/v1/user/me": {
      "get": {
        "tags": ["users"],
        "summary": "Get Own User",
        "description": "get own user",
        "operationId": "users-get_own_user",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UserPublic" }
              }
            }
          }
        },
        "security": [{ "OAuth2PasswordBearer": [] }]
      }
    },
    "/api/v1/private/users": {
      "post": {
        "tags": ["private"],
        "summary": "Create User",
        "description": "Create a new user.",
        "operationId": "private-create_user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/PrivateUserCreate" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UserPublic" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/electrometer/test/electrometer-1/connect": {
      "get": {
        "tags": ["Electrometer"],
        "summary": "Test Connect To Electrometer 1",
        "description": "Test connection to the first electrometer",
        "operationId": "Electrometer-test_connect_to_electrometer_1",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          }
        }
      }
    },
    "/electrometer/test/electrometer-1/get-data": {
      "get": {
        "tags": ["Electrometer"],
        "summary": "Test Get Data Electrometer 1",
        "description": "Test getting data from the first electrometer",
        "operationId": "Electrometer-test_get_data_electrometer_1",
        "parameters": [
          {
            "name": "start",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                { "type": "string", "format": "date-time" },
                { "type": "null" }
              ],
              "title": "Start"
            }
          },
          {
            "name": "end",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                { "type": "string", "format": "date-time" },
                { "type": "null" }
              ],
              "title": "End"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CurrentDataResponse" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/electrometer/test/electrometer-1/trigger-measure": {
      "get": {
        "tags": ["Electrometer"],
        "summary": "Test Trigger Measure Electrometer 1",
        "description": "Test triggering a measurement on the first electrometer",
        "operationId": "Electrometer-test_trigger_measure_electrometer_1",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          }
        }
      }
    },
    "/electrometer/test/electrometer-1/continuous-measure/start": {
      "get": {
        "tags": ["Electrometer"],
        "summary": "Test Start Continuous Measure Electrometer 1",
        "description": "Test starting continuous measurement on the first electrometer",
        "operationId": "Electrometer-test_start_continuous_measure_electrometer_1",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          }
        }
      }
    },
    "/electrometer/test/electrometer-1/continuous-measure/stop": {
      "get": {
        "tags": ["Electrometer"],
        "summary": "Test Stop Continuous Measure Electrometer 1",
        "description": "Test stopping continuous measurement on the first electrometer",
        "operationId": "Electrometer-test_stop_continuous_measure_electrometer_1",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Body_auth-login_access_token": {
        "properties": {
          "grant_type": {
            "anyOf": [
              { "type": "string", "pattern": "^password$" },
              { "type": "null" }
            ],
            "title": "Grant Type"
          },
          "username": { "type": "string", "title": "Username" },
          "password": { "type": "string", "title": "Password" },
          "scope": { "type": "string", "title": "Scope", "default": "" },
          "client_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Client Id"
          },
          "client_secret": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Client Secret"
          }
        },
        "type": "object",
        "required": ["username", "password"],
        "title": "Body_auth-login_access_token"
      },
      "CurrentDataResponse": {
        "properties": {
          "current": {
            "items": { "type": "number" },
            "type": "array",
            "title": "Current"
          },
          "time": {
            "items": { "type": "string", "format": "date-time" },
            "type": "array",
            "title": "Time"
          }
        },
        "type": "object",
        "required": ["current", "time"],
        "title": "CurrentDataResponse"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": { "$ref": "#/components/schemas/ValidationError" },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "MonitoringHeartRates": {
        "properties": {
          "heart_rate": {
            "items": { "type": "integer" },
            "type": "array",
            "title": "Heart Rate"
          },
          "timestamp": {
            "items": { "type": "string", "format": "date-time" },
            "type": "array",
            "title": "Timestamp"
          }
        },
        "type": "object",
        "required": ["heart_rate", "timestamp"],
        "title": "MonitoringHeartRates"
      },
      "PrivateUserCreate": {
        "properties": {
          "username": { "type": "string", "title": "Username" },
          "email": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Email"
          },
          "first_name": {
            "anyOf": [
              { "type": "string", "maxLength": 255 },
              { "type": "null" }
            ],
            "title": "First Name"
          },
          "last_name": {
            "anyOf": [
              { "type": "string", "maxLength": 255 },
              { "type": "null" }
            ],
            "title": "Last Name"
          },
          "disabled": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "title": "Disabled",
            "default": false
          },
          "is_superuser": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "title": "Is Superuser",
            "default": false
          },
          "password": { "type": "string", "title": "Password" }
        },
        "type": "object",
        "required": ["username", "password"],
        "title": "PrivateUserCreate",
        "description": "UserCreate model for creating a user."
      },
      "Token": {
        "properties": {
          "access_token": { "type": "string", "title": "Access Token" },
          "token_type": {
            "type": "string",
            "title": "Token Type",
            "default": "bearer"
          }
        },
        "type": "object",
        "required": ["access_token"],
        "title": "Token"
      },
      "UpdateProcessStatus": {
        "properties": {
          "status": {
            "type": "string",
            "enum": ["running", "finished"],
            "title": "Status"
          }
        },
        "type": "object",
        "required": ["status"],
        "title": "UpdateProcessStatus"
      },
      "UserPublic": {
        "properties": {
          "username": { "type": "string", "title": "Username" },
          "email": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Email"
          },
          "first_name": {
            "anyOf": [
              { "type": "string", "maxLength": 255 },
              { "type": "null" }
            ],
            "title": "First Name"
          },
          "last_name": {
            "anyOf": [
              { "type": "string", "maxLength": 255 },
              { "type": "null" }
            ],
            "title": "Last Name"
          },
          "disabled": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "title": "Disabled",
            "default": false
          },
          "is_superuser": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "title": "Is Superuser",
            "default": false
          }
        },
        "type": "object",
        "required": ["username"],
        "title": "UserPublic"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": { "anyOf": [{ "type": "string" }, { "type": "integer" }] },
            "type": "array",
            "title": "Location"
          },
          "msg": { "type": "string", "title": "Message" },
          "type": { "type": "string", "title": "Error Type" }
        },
        "type": "object",
        "required": ["loc", "msg", "type"],
        "title": "ValidationError"
      }
    },
    "securitySchemes": {
      "OAuth2PasswordBearer": {
        "type": "oauth2",
        "flows": {
          "password": { "scopes": {}, "tokenUrl": "/api/v1/login/access-token" }
        }
      }
    }
  }
}
